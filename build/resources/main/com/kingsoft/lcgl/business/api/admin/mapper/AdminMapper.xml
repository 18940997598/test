<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingsoft.lcgl.business.api.admin.mapper.AdminMapper">

    <select id="checkAdmin" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM admin WHERE user_id=#{userId}
    </select>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId" parameterType="com.kingsoft.lcgl.business.api.admin.dto.AddUserRequest">
        INSERT `user`(name,mail,phone,department_id,pass)VALUES(#{name},#{mail},#{phone},#{departmentId},'96E79218965EB72C92A549DD5A330112')
    </insert>

    <insert id="addAdmin" >
        INSERT admin (user_id,admin_level)VALUES(#{userId},#{adminLevel})
    </insert>

    <select id="getAdminLevel" resultType="java.lang.Long">
        SELECT admin_level FROM admin WHERE user_id = #{userId}
    </select>

    <delete id="deleteAdmin">
        DELETE FROM admin WHERE user_id = #{userId}
    </delete>

    <select id="getDepartments" resultType="com.kingsoft.lcgl.business.api.common.dto.DepartmentDto">
        SELECT department.id,department_name AS name,department_introduce AS introduce,user_id AS userId,u.name AS userName FROM department LEFT JOIN user as u  ON department.user_id = u.id  WHERE department_name like CONCAT('%',#{name},'%')
    </select>

    <select id="getDepartmentInfoById" resultType="com.kingsoft.lcgl.business.api.common.dto.DepartmentDto">
        SELECT department.id,department_name AS name,department_introduce AS introduce,user_id AS userId,u.name AS userName FROM department LEFT JOIN user as u  ON department.user_id = u.id WHERE department.id = #{id}
    </select>

    <insert id="addDepartment" useGeneratedKeys="true" keyProperty="id" parameterType="com.kingsoft.lcgl.business.api.admin.dto.AddDepartmentRequest">
        INSERT department(department_name,department_introduce)VALUES(#{name},#{introduce})
    </insert>

    <update id="updateDepartment"  parameterType="com.kingsoft.lcgl.business.api.admin.dto.AddDepartmentRequest">
        UPDATE department SET department_name = #{name},department_introduce = #{introduce},user_id = #{userId} where id  = #{id}
    </update>

    <delete id="deleteDepartment">
        DELETE from department WHERE id = #{id}
    </delete>

    <delete id="deleteDepartments">
        DELETE from department WHERE id IN
        <foreach collection="departments" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

</mapper>